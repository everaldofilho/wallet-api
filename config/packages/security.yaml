security:
    encoders:
        App\Entity\User:
            algorithm: "argon2i"
            # maximum memory (in KiB) that may be used to compute the Argon2 hash
            memory_cost: 1024
            #  number of times the Argon2 hash algorithm will be run
            time_cost: 3

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: document
    firewalls:
        account:
            pattern:  ^/api/account
            anonymous: true
        login:
            pattern:  ^/api/login_check
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - {
              path: ^/api/account,
              methods: [POST],
              roles: IS_AUTHENTICATED_ANONYMOUSLY,
          }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY}
